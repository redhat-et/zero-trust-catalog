* zero-trust-catalog

A project to define an OSCAL catalog of controls for Zero Trust and related component models for
Red Hat products.

The OSCAL architecture is described in https://pages.nist.gov/OSCAL/resources/concepts/layer/.

This project uses [[https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf][NIST SP 800-207 - Zero Trust Architecture]] as the definition of a desired Zero
Trust architectural state. The controls defined in [[https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf][NIST SP 800-53 rev5]] and
[[https://github.com/cloud-native-security-controls/controls-catalog][Cloud Native Security Controls]] are used as a basis and cross-referenced with the architectural
tenets described in NIST SP 800-207.

The catalog of controls in this project is derived from the NIST maintained OSCAL content in:
https://github.com/usnistgov/oscal-content.

** Background Material

+ [[doc/README.org][OSCAL Notes]]

*** Requirements from NIST specifications

+ [[file:NIST/nist-sp-800-204b.org][NIST SP 800-204B]]
+ [[file:NIST/nist-sp-800-207a.org][NIST SP 800-207A]]

** Sample Queries

You need to install ~yq~ to make use of these queries.

+ [[https://github.com/mikefarah/yq?tab=readme-ov-file#install][yq - Installation instructions]]
+ [[https://mikefarah.gitbook.io/yq][yq - Documentation]]

*** Controls linked to ZTA Tenet 1

Find all controls that have been linked to *ZTA Tenet 1* with a ~zta-tenet~ property annotation:

#+begin_src sh :results output :exports both
yq '[.controls[]
   | select(contains({"props":[{"name":"zta-tenet","value":"1 -"}]}))]' \
   cnswp-v2-controls.yaml
#+end_src

#+RESULTS:
#+begin_example
- id: control-206
  class_: CNSWP-v2.0
  title: All cluster and workloads operators are authenticated
  props:
    - name: section
      value: Access
    - name: assurance-level
      value: N/A
    - name: risk-categories
      value: N/A
    - name: refs
      value: IA-7 Cryptographic Module Authentication
    - name: zta-tenet
      value: 1 - All data sources and computing services are considered resources
- id: control-207
  class_: CNSWP-v2.0
  title: cluster and worklods operate actions are evaluated against access control policies governing context, purpose, and output
  props:
    - name: section
      value: Access
    - name: assurance-level
      value: N/A
    - name: risk-categories
      value: N/A
    - name: refs
      value: IA-7 Cryptographic Module Authentication
    - name: zta-tenet
      value: 1 - All data sources and computing services are considered resources
#+end_example

*** Count of annotated controls

Count the number of ~zta-tenet~ annotations.

#+begin_src sh :results output
yq '[.controls[] | select(contains({"props":[{"name":"zta-tenet"}]}))] | length' \
   cnswp-v2-controls.yaml
#+end_src

#+RESULTS:
: 38

*** No zta-tenet annotation

Find all controls that don't have a ~zta-tenet~ property annotation

#+begin_src sh :results output
yq '[.controls[]
   | select(contains({"props":[{"name":"zta-tenet"}]}) == false)
   ] | length' \
   cnswp-v2-controls.yaml
#+end_src

#+RESULTS:
: 113

*** Controls per section

List the number of controls in each CNSWP section.

#+begin_src sh :results output
for s in Access Compute Deploy Develop Distribute Security\ Assurance
do
    /bin/echo -n "${s} - "
    yq "[.controls[] | select(contains({\"props\":[{\"value\":\"${s}\"}]}))] | length" \
       cnswp-v2-controls.yaml
done
#+end_src

#+RESULTS:
: Access - 35
: Compute - 35
: Deploy - 6
: Develop - 17
: Distribute - 36
: Security Assurance - 22

*** Tenet mappings

List the number of mappings for each ZTA Tenet.

#+begin_src sh :results output
for n in 1 2 3 4 5 6 7
do
    /bin/echo -n "Tenet ${n} - "
    ack -c "${n} - " cnswp-v2-controls.yaml
done
true
#+end_src

#+RESULTS:
: Tenet 1 - 2
: Tenet 2 - 7
: Tenet 3 - 3
: Tenet 4 - 12
: Tenet 5 - 4
: Tenet 6 - 15
: Tenet 7 - 5
