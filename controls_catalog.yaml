uuid: ed17a132-f24c-4812-8c7b-688d2421113b
metadata:
  title: Cloud Native Security Controls Catalog
  last_modified: "2024-05-10T17:16:14.472+00:00"
  version: 0.0.1
  oscal_version: 1.0.4
controls:
  - id: control-1
    class_: CNSWP-v1.0
    title: Secrets are injected at runtime, such as environment variables or as a file
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-5(7) Authenticator Management | No Embedded Unencrypted Static Authenticators
  - id: control-2
    class_: CNSWP-v1.0
    title: Applications and workloads are explicitly authorized to communicate with each other using mutual authentication
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-9 Service Identification and Authentication
  - id: control-3
    class_: CNSWP-v1.0
    title: Keys are rotated frequently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12 Cryptographic Key Establishment and Management
  - id: control-4
    class_: CNSWP-v1.0
    title: Key lifespan is short
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) Cryptographic Key Establishment and Management | Asymetric Key
  - id: control-5
    class_: CNSWP-v1.0
    title: Credentials and keys protecting sensitive workloads (health/finance/etc) are customer managed (e.g. generated and managed independent of a cloud service provider)
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: KMS and HMS are common technologies to achieve this. FIPS 140-2 compliance is strongly suggested. Cloud KMS tends to be FIPS 140-2 Level 2 or greater.
      - name: refs
        value: IA-2(12) Identification and Authentication (Organizational Users) | Acceptance of PIV Credentials
  - id: control-6
    class_: CNSWP-v1.0
    title: Authentication and authorization are determined independently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(6) Identification and Authentication (Organizational Users) | Access to Accounts - Separate Devices
  - id: control-7
    class_: CNSWP-v1.0
    title: Authentication and authorization are enforced independently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(6) Identification and Authentication (Organizational Users) | Access to Accounts - Separate Devices
  - id: control-8
    class_: CNSWP-v1.0
    title: Access control and file permissions are updated in real-time
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: where possible as caching may permit unauthorized access
      - name: refs
        value: SI-4(2) System Monitoring | Automated Tools and Mechanisms for Real-Time Analysis
  - id: control-9
    class_: CNSWP-v1.0
    title: Authorization for workloads is granted based on attributs and roles/permissions previously assigned
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-3(13) Access Enforcement | Attribute-Based Access Control
  - id: control-10
    class_: CNSWP-v1.0
    title: ABAC and RBAC are used
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-3(13) Access Enforcement | Attribute-Based Access Control, AC-3(7) Access Enforcement | Role-Based Access Control
  - id: control-11
    class_: CNSWP-v1.0
    title: End user identity is capable of being accepted, consumed, and forwarded on for contextual or dynamic authorization
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This can be achieved through the use of identity documents and tokens.
      - name: refs
        value: SC-7(19) Boundary Protection | Block Communication from Non-Organizationally Configured Hosts
  - id: control-12
    class_: CNSWP-v1.0
    title: All cluster and workloads operators are authenticated
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-7 Cryptographic Module Authentication
  - id: control-13
    class_: CNSWP-v1.0
    title: cluster and worklods operate actions are evaluated against access control policies governing context, purpose, and output
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-7 Cryptographic Module Authentication
  - id: control-14
    class_: CNSWP-v1.0
    title: Identity federation uses multi-factor authentication for human users
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(1)(2) Identification and Authentication (organizational Users) | Multi-Factor Authenticaiton to Priviledged & Non Priveledged Accounts
  - id: control-15
    class_: CNSWP-v1.0
    title: HSMs are used to physically protect cryptographic secrets with an encryption key residing in the HSM
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: If this is not possible, software-based credential managers should be used.
      - name: refs
        value: AC-4(4) Information Flow Enforcement | Flow Control of Encrypted Information, SC-3(1) Security Function Isolation | Hardware Separation
  - id: control-16
    class_: CNSWP-v1.0
    title: Secrets should have a short expiration period or time to live
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Leverage tool-specific capabilities of secret manager
      - name: refs
        value: SI-12 Information Management and Retention
  - id: control-17
    class_: CNSWP-v1.0
    title: Time to live and expiration period on secrets is verfied to prevent reuse
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Leverage tool-specific capabilities of secret manager
      - name: refs
        value: AC-16(3) Security and Privacy Attributes | Maintenance of Attribute Associations by System
  - id: control-18
    class_: CNSWP-v1.0
    title: Secrets management systems are highly available
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(1) Cryptographic Key Establishment and Management | Availability
  - id: control-19
    class_: CNSWP-v1.0
    title: Long-lived secrets adhere to periodic rotation and revocation
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Long-lived secrets are not recommended, but some capabilities require them
      - name: refs
        value: SI-12 Information Management and Retention
  - id: control-20
    class_: CNSWP-v1.0
    title: Secrets are distributed through secured communication channels protected commensurate with the level of access or data they are protecting
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-16 Security and Privacy Atributes
  - id: control-21
    class_: CNSWP-v1.0
    title: Secrets injected are runtime are masqued or dropped from logs, audit, or system dumps
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Even short lived secrets may be resused if caught in time by an interested attacker. Logs, audit, and systems dumps (i.e. in-memory shared volumes instead of environment variables) are all areas where runtime injected secrets show up
      - name: refs
        value: AU-9(3) Protection of Audit Information | Cryptographic Protection
  - id: control-22
    class_: CNSWP-v1.0
    title: Bootstrapping is employed to verify correct physical and logical location of compute
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Secure Boot with TPM 2.0 or similar control
      - name: refs
        value: SI-7(9) Software, Firmware, and Information Integrity | Verify Boot Process
  - id: control-23
    class_: CNSWP-v1.0
    title: Disparate data sensitive workloads are not run on the same host OS kernel
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: 'There are at least three implementing controls possible: workloads may be separated by running in a separate cluster, on a separate node, or by implementing pods in independent VMs. It is also possible to emulate the kernel via an application kernel (e.g. gvisor)'
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-24
    class_: CNSWP-v1.0
    title: Monitor and detect any changes to the initial configurations made in runtime
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Preventative controls should be the primary control. Detective controls monitoring filesystem changes should be used to verify primary controls are operating properly.
      - name: refs
        value: CM-2(2) Baseline Configuration | Automation Support for Accuracy and Currency CM-3(7) Configuration Change Control | Review System Changes
  - id: control-25
    class_: CNSWP-v1.0
    title: API auditing is enabled with a filter for a specific set of API Groups or verbs
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: API audits of the application, kubernetes API server, and kernel should be implemented.
      - name: refs
        value: AU-2 Event Logging
  - id: control-26
    class_: CNSWP-v1.0
    title: Container specific operating systems are in use
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: a read-only OS with other services disabled. This provides isolation and resource confinement that enables developers to run isolated applications on a shared host kernel
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-27
    class_: CNSWP-v1.0
    title: The hardware root of trust is based in a Trusted Platform Module (TPM) or virtual TPM (vTPM)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Ensure HW root of trust extends to the host OS kernel, modules, system images, container runtimes, and all software on the system.
      - name: refs
        value: SI-7 Software, Firmware, and Information Integrity
  - id: control-28
    class_: CNSWP-v1.0
    title: Minimize administrative access to the control plane
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Enure both users and pods have the minimum necessary access
      - name: refs
        value: AC-6 Least Privilege
  - id: control-29
    class_: CNSWP-v1.0
    title: Object level and resource requests and limits are controlled through cgroups
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: helps prevent exhaustion of node and cluster level resources by one misbehaving workload due to an intentional (e.g., fork bomb attack or cryptocurrency mining) or unintentional (e.g., reading a large file in memory without input validation, horizontal autoscaling to exhaust compute resources) issue
      - name: refs
        value: SI-7(16) Software, Firmware, and Information Integrity | Time Limit on Process Execution Without Supervision, SI-7(17) Software, Firmware, and Information Integrity | Runtime Application Self-protection
  - id: control-30
    class_: CNSWP-v1.0
    title: Systems processing alerts are periodically tuned for false positives
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: to avoid alert flooding, fatigue, and false negatives after security incidents that were not detected by the system
      - name: refs
        value: SI-4(13) System Monitoring | Analyze Traffic and Event Patterns
  - id: control-31
    class_: CNSWP-v1.0
    title: All orchestrator control plane components are configured to communicate via mutual authentication and certificate validation with a periodically rotated certificate
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: In unfederated clusters, the CA should be used exclusively for the current cluster.
      - name: refs
        value: AC-3 Access Enforcement
  - id: control-32
    class_: CNSWP-v1.0
    title: Only sanctioned capabilities and system calls (e.g. seccomp filters), are allowed to execute or be invoked in a container by the host operating system
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Additional tooling should be installed that go beyond k8s capabilities to limit system calls. E.g. Falco.
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-33
    class_: CNSWP-v1.0
    title: Changes to critical mount points and files are prevented, monitored, and alerted
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-34
    class_: CNSWP-v1.0
    title: Runtime configuration control prevents changes to binaries, certificates, and remote access configurations
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-35
    class_: CNSWP-v1.0
    title: Runtime configuration prevents ingress and egress network access for containers to only what is required to operate
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-36
    class_: CNSWP-v1.0
    title: Policies are defined that restrict communications to only occur between sanctioned microservice pairs
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-37
    class_: CNSWP-v1.0
    title: Use a policy agent to control and enforce authorized, signed container images
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-38
    class_: CNSWP-v1.0
    title: Use a policy agent to control provenance assurance for operational workloads
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-39
    class_: CNSWP-v1.0
    title: Use a service mesh that eliminates implicit trust through data-in-motion protection (i.e. confidentiality, integrity, authentication, authorization)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-40
    class_: CNSWP-v1.0
    title: Use components that detect, track, aggregate and report system calls and network traffic from a container
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: should be leveraged to look for unexpected or malicious behavior
      - name: refs
        value: SI-4 System Monitoring
  - id: control-41
    class_: CNSWP-v1.0
    title: Workloads should be dynamically scanned to detect malicious or insidious behavior for which no known occurrence yet exists
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Events such as an extended sleep command that executes data exfiltration from etcd after the workload has been running for X amount of days are not expected in the majority of environments and therefore are not included in security tests. The aspect that workloads can have time or event delayed trojan horses is only detectable by comparing to baseline expected behavior, often discovered during thorough activity and scan monitoring
      - name: refs
        value: SI-3 Malicious Code Protection
  - id: control-42
    class_: CNSWP-v1.0
    title: Environments are continuously scanned to detect new vulnerabilities in workloads
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Vulnerabilities are constantly being discovered, just because it wasnt vulnerable at deploy, doesn't mean it won't be vulnerable in two weeks
      - name: refs
        value: RA-5 Vulnerability Monitoring and Scanning
  - id: control-43
    class_: CNSWP-v1.0
    title: Actionable audit events are generated that correlate/contextualize data from logs into "information" that can drive decision trees/incident response
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AU-3 Content of Audit Records
  - id: control-44
    class_: CNSWP-v1.0
    title: Segregation of duties and the principle of least privilege is enforced
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6 Least Privilege
  - id: control-45
    class_: CNSWP-v1.0
    title: Non-compliant violations are detected based on a pre-configured set of rules defined by the organization's policies
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 Software, Firmware, and Information Integrity
  - id: control-46
    class_: CNSWP-v1.0
    title: Native secret stores encrypt with keys from an external Key Management Store (KMS)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) Systems & Communication Protection
  - id: control-47
    class_: CNSWP-v1.0
    title: Native secret stores are not configured for base64 encoding or stored in clear-text in the key-value store by default
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Encoding is not encryption
      - name: refs
        value: SC-12(3) Systems & Communication Protection
  - id: control-48
    class_: CNSWP-v1.0
    title: Network traffic to malicious domains is detected and denied
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 System Monitoring
  - id: control-49
    class_: CNSWP-v1.0
    title: Use encrypted containers for sensitive sources, methods, and data
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-28 Protection of Information at Rest
  - id: control-50
    class_: CNSWP-v1.0
    title: Use SBOMs to identify current deployments of vulnerable libraries, dependencies, and packages
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-8 System Component Inventory
  - id: control-51
    class_: CNSWP-v1.0
    title: Processes must execute only functions explicitly defined in an allow list
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-52
    class_: CNSWP-v1.0
    title: Functions are not be allowed to make changes to critical file system mount points
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-53
    class_: CNSWP-v1.0
    title: Function access is only permitted to sanctioned services
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Either through networking restrictions or least privilege in permission models
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-54
    class_: CNSWP-v1.0
    title: Egress network connection is monitored to detect and prevent access to C&C (command and control) and other malicious network domains
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 System Monitoring
  - id: control-55
    class_: CNSWP-v1.0
    title: Ingress network inspection is employed detect and remove malicious payloads and commands
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: For instance, SQL injection attacks can be detected using inspection.
      - name: refs
        value: SI-4 System Monitoring
  - id: control-56
    class_: CNSWP-v1.0
    title: Serverless functions are run in tenant-based resource or performance isolation for similar data classifications
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This may impact the performance due to limitations in the address space available to the isolation environment and should be considered for only the most sensitive workloads.
      - name: refs
        value: SC-7(21) Boundary Protection | Isolation of System Components
  - id: control-57
    class_: CNSWP-v1.0
    title: Trust confirmation verifies the image has a valid signature from an authorized source
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SR-4 (3) PROVENANCE | VALIDATE AS GENUINE AND NOT ALTERED, SR-4 (4)  PROVENANCE | SUPPLY CHAIN INTEGRITY — PEDIGREE
  - id: control-58
    class_: CNSWP-v1.0
    title: Image runtime policies are enforced prior to deployment
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 (17) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | RUNTIME APPLICATION SELF-PROTECTION
  - id: control-59
    class_: CNSWP-v1.0
    title: Image integrity and signature are verified prior to deployment
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SR-4 (3) PROVENANCE | VALIDATE AS GENUINE AND NOT ALTERED, SR-4 (4)  PROVENANCE | SUPPLY CHAIN INTEGRITY — PEDIGREE
  - id: control-60
    class_: CNSWP-v1.0
    title: Applications provide logs regarding authentication, authorization, actions, and failures
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-3 CONFIGURATION CHANGE CONTROL
  - id: control-61
    class_: CNSWP-v1.0
    title: Forensics capabilities are integrated into an incident response plan and procedures
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: INCIDENT HANDLING | MALICIOUS CODE AND FORENSIC ANALYSIS
  - id: control-62
    class_: CNSWP-v1.0
    title: AI, ML, or statistical modeling are used for behavioural and heuristic environment analysis to detect unwanted activities
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-3 SYSTEM AND INFORMATION INTEGRITY
  - id: control-63
    class_: CNSWP-v1.0
    title: Establish a dedicated Production environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Ensure that production workloads are in a separate, dedicated environment from non-production workloads. In the context of containers, this can mean separate clusters. In the case of VMs, separate networks.
      - name: refs
        value: SA-3(1) SYSTEM DEVELOPMENT LIFE CYCLE | MANAGE PREPRODUCTION ENVIRONMENT
  - id: control-64
    class_: CNSWP-v1.0
    title: Leverage Dynamic deployments
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Blue/Green, Alpha/Beta, Canary, red-black deployments
      - name: refs
        value: SA-8(31) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | SECURE SYSTEM MODIFICATION
  - id: control-65
    class_: CNSWP-v1.0
    title: Integrate vulnerability and configuration scanning in both the IDE and at the CI system during pull request
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(1) DEVELOPER TESTING AND EVALUATION | STATIC CODE ANALYSIS
  - id: control-66
    class_: CNSWP-v1.0
    title: Establish dedicated development, testing, and production environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-15 DEVELOPMENT PROCESS, STANDARDS, AND TOOLS
  - id: control-67
    class_: CNSWP-v1.0
    title: Build tests for business-critical code
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-68
    class_: CNSWP-v1.0
    title: Build tests for business-critical infrastructure
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-69
    class_: CNSWP-v1.0
    title: Test suite able to be ran locally
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-70
    class_: CNSWP-v1.0
    title: Test suites should be available to run in a shared environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-71
    class_: CNSWP-v1.0
    title: Implement at least one other non-author reviewer/approver prior to merging
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(4) DEVELOPER TESTING AND EVALUATION | MANUAL CODE REVIEWS
  - id: control-72
    class_: CNSWP-v1.0
    title: Code should be clean and well commented
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-73
    class_: CNSWP-v1.0
    title: Full infrastructure tests are used
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-74
    class_: CNSWP-v1.0
    title: Regression tests are used
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-75
    class_: CNSWP-v1.0
    title: Test suites are updated against new and emerging threats and developed into security regressions tests
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-76
    class_: CNSWP-v1.0
    title: Establish a dedicated Testing environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-3(1) SYSTEM DEVELOPMENT LIFE CYCLE | MANAGE PREPRODUCTION ENVIRONMENT
  - id: control-77
    class_: CNSWP-v1.0
    title: Continuous integration server is isolated and hardened
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-78
    class_: CNSWP-v1.0
    title: Use threat model results to determine ROI for test development
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(2) DEVELOPER TESTING AND EVALUATION | THREAT MODELING AND VULNERABILITY ANALYSES
  - id: control-79
    class_: CNSWP-v1.0
    title: Should software artifacts become untrusted due to compromise or other incident, teams should revoke signing keys to ensure repudiation
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-80
    class_: CNSWP-v1.0
    title: Artifacts ready for deployment are managed in a staging or pre-prod registry
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-81
    class_: CNSWP-v1.0
    title: container images are hardened following best practices
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Images contain least permissions to remain functional, do not allow for shell, do not include unnecessary libraries and dependencies, do not bind mount files in from the host, etc.
  - id: control-82
    class_: CNSWP-v1.0
    title: Static application security testing (SAST) is performed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Static analysis is performed by dedicated SAST tools as well as linters
  - id: control-83
    class_: CNSWP-v1.0
    title: Test suites follow the test pyramid
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-84
    class_: CNSWP-v1.0
    title: Artifacts undergoing active development are held in a private registery
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-85
    class_: CNSWP-v1.0
    title: Scan application manifests in CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING
  - id: control-86
    class_: CNSWP-v1.0
    title: CI server's for sensitive workloads are isolated from other workloads
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-87
    class_: CNSWP-v1.0
    title: Builds requiring elevated privileges must run on dedicated servers
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-88
    class_: CNSWP-v1.0
    title: Build policies are enforced on the CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-1 POLICY AND PROCEDURES
  - id: control-89
    class_: CNSWP-v1.0
    title: Sign pipeline metadata
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-90
    class_: CNSWP-v1.0
    title: Build stages are verified prior to the next stage executing
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-91
    class_: CNSWP-v1.0
    title: Images are scanned within the CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-92
    class_: CNSWP-v1.0
    title: Vulnerability scans are coupled with pipeline compliance rules
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Prevent insecure images and artifacts from being deployed
      - name: refs
        value: SA-1 POLICY AND PROCEDURES
  - id: control-93
    class_: CNSWP-v1.0
    title: Dynamic application security testing (DAST) is performed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 (8) & (9) INTERACTIVE APPLICATION SECURITY TESTING
  - id: control-94
    class_: CNSWP-v1.0
    title: Application instrumentation is employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 SYSTEM MONITORING
  - id: control-95
    class_: CNSWP-v1.0
    title: Automated test results map back to requirements
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Requirements include feature, function, security, and complaince
  - id: control-96
    class_: CNSWP-v1.0
    title: Infrastructure security tests must be employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: firewall rules open to the world, overprivileged Identity & Access Management (IAM) policies, unauthenticated endpoints, etc
  - id: control-97
    class_: CNSWP-v1.0
    title: Tests to verify the security health are executed at time of build and at time of deploy
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: to evaluate any changes or regressions that may have occurred throughout the lifecycle.
      - name: refs
        value: SI-4 SYSTEM MONITORING
  - id: control-98
    class_: CNSWP-v1.0
    title: IaC is subject to the same pipeline policy controls as application code
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-99
    class_: CNSWP-v1.0
    title: Security testing is automated
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION, CA-8 PENETRATION TESTING
  - id: control-100
    class_: CNSWP-v1.0
    title: Registries require mutually authenticated TLS for all registry connections
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-3(1) CRYPTOGRAPHIC BIDIRECTIONAL AUTHENTICATION
  - id: control-101
    class_: CNSWP-v1.0
    title: Image and metadata are signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-102
    class_: CNSWP-v1.0
    title: Workload-related configuration is signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-103
    class_: CNSWP-v1.0
    title: Workload-related package is signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-104
    class_: CNSWP-v1.0
    title: Validate integrity of images
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SYSTEM & INFORMATION INTEGRITY
  - id: control-105
    class_: CNSWP-v1.0
    title: Scan images for vulnerabilities and malware
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-106
    class_: CNSWP-v1.0
    title: Enable image signing key revokation in the event of compromise
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SYSTEM & INFORMATION INTEGRITY
  - id: control-107
    class_: CNSWP-v1.0
    title: Security updates are prioritized
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-108
    class_: CNSWP-v1.0
    title: HSMs or credential managers should be used for protecting credentials. If this is not possible, software-based credential managers should be used.
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) SYSTEMS & COMMUNICATION PROTECTION
  - id: control-109
    class_: CNSWP-v1.0
    title: Container image scanning findings are acted upon
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-110
    class_: CNSWP-v1.0
    title: Organizational compliance rules are enforced
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: PL-1 POLICY AND PROCEDURES
  - id: control-111
    class_: CNSWP-v1.0
    title: Incremental hardening of the infrastructure is employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-112
    class_: CNSWP-v1.0
    title: pulls from public registries are controlled and only from authorized engineers or internal registries
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6(3) LEAST PRIVILEGE | NETWORK ACCESS TO PRIVILEGED COMMANDS
  - id: control-113
    class_: CNSWP-v1.0
    title: Image encryption is coupled with key management attestation and/or authorization and credential distribution
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This restricts the image to only be deployed to authorized platforms. Container image authorization is useful for compliance use cases such as geo-fencing or export control and digital rights media management
      - name: refs
        value: SC-12(2) CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT | SYMMETRIC & ASYMMETRIC KEYS, SC-12(3) CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT | SYMMETRIC & ASYMMETRIC KEYS
  - id: control-114
    class_: CNSWP-v1.0
    title: At-risk applications are prioritized for remediation by the exploit maturity and vulnerable path presence in addition to the CVSS score
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-115
    class_: CNSWP-v1.0
    title: Network policies enforce east-west network communication within the container deployment is limited to only that which is authorized for access
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6(3) LEAST PRIVILEGE | NETWORK ACCESS TO PRIVILEGED COMMANDS
  - id: control-116
    class_: CNSWP-v1.0
    title: Incident reponse considers cloud native workloads
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: workloads which may not always conform with some underlying assumptions about node isolation (new pod instances could run on a different server), networking (e.g. IP addresses are assigned dynamically) and immutability (e.g. runtime changes to container are not persisted across restarts)
      - name: refs
        value: IR-4 INCIDENT HANDLING | AUTOMATED INCIDENT HANDLING PROCESSES, IR-4(5) INCIDENT HANDLING | AUTOMATIC DISABLING OF SYSTEM, CA-7 CONTINUOUS MONITORING
  - id: control-117
    class_: CNSWP-v1.0
    title: Incident response accounts for appropriate evidence handling and collection of coud native workloads
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IR-5(1) INCIDENT MONITORING | AUTOMATED TRACKING, DATA COLLECTION, AND ANALYSIS
  - id: control-118
    class_: CNSWP-v1.0
    title: Rootless builds are employed
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-119
    class_: CNSWP-v1.0
    title: cgroups and system groups are used to isolate workloads and deployments
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-120
    class_: CNSWP-v1.0
    title: MAC implementations are employed
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: SELinux, AppArmor
      - name: refs
        value: AC-3(3) ACCESS ENFORCEMENT | MANDATORY ACCESS CONTROL
  - id: control-121
    class_: CNSWP-v1.0
    title: Threat model code and infrastructure
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(2) DEVELOPER TESTING AND EVALUATION | THREAT MODELING AND VULNERABILITY ANALYSES
  - id: control-122
    class_: CNSWP-v1.0
    title: Entities are able to independently authenticate other identities
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Public Key Infrastructure
      - name: refs
        value: IA-9 SERVICE IDENTIFICATION AND AUTHENTICATION
  - id: control-123
    class_: CNSWP-v1.0
    title: Each entity can create proof of who the identity is
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-9 SERVICE IDENTIFICATION AND AUTHENTICATION
  - id: control-124
    class_: CNSWP-v1.0
    title: Orchestrator is running on an a trusted OS, BIOS, etc
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-14 SIGNED COMPONENTS
  - id: control-125
    class_: CNSWP-v1.0
    title: Orchestrator verifies the claims of a container
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-6 SECURITY AND PRIVACY FUNCTION VERIFICATION
  - id: control-126
    class_: CNSWP-v1.0
    title: Orchestrator network policies are used in conjunction with a service mesh
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-127
    class_: CNSWP-v1.0
    title: Storage control plane management interface requires mutual authentication and TLS for connections
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY
  - id: control-128
    class_: CNSWP-v1.0
    title: Data availability is achieved through parity or mirroring, erasure coding or replicas
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-13 PREDICTABLE FAILURE PREVENTION
  - id: control-129
    class_: CNSWP-v1.0
    title: Hashing and checksums are added to blocks, objects or files
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: primarily designed to detect and recover from corrupted data, but can also add a layer of protection against the tampering of data.
      - name: refs
        value: CM-7 LEAST FUNCTIONALITY, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-130
    class_: CNSWP-v1.0
    title: Data backup storage and data source storage should have same security controls
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-9 EXTERNAL SYSTEM SERVICES, SC-30 CONCEALMENT AND MISDIRECTION
  - id: control-131
    class_: CNSWP-v1.0
    title: Secure erasure adhering to OPAL standards is employed for returned or non-functional devices
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CP-9 SYSTEM BACKUP, MP-6 MEDIA SANITIZATION
  - id: control-132
    class_: CNSWP-v1.0
    title: Encryption at rest considers data path, size, and frequency of access when determing additional security protections and cryptographic algorithms to employ
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The encryption may be implemented in the storage client or storage server and granularity of the encryption will vary by system (e.g. per volume, per group or global keys)
      - name: refs
        value: SC-28 PROTECTION OF INFORMATION AT REST
  - id: control-133
    class_: CNSWP-v1.0
    title: Caching is considered for determining encryption requirements in archictures
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-134
    class_: CNSWP-v1.0
    title: Namespaces have defined trust boundaries to cordon access to volumes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-135
    class_: CNSWP-v1.0
    title: Security policies are used to prevent containers from accessing volume mounts on worker nodes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 BOUNDARY PROTECTION, SA-8 SECURITY AND PRIVACY ENGINEERING PRINCIPLES, CM-6 CONFIGURATION SETTINGS
  - id: control-136
    class_: CNSWP-v1.0
    title: Security policies are used enforce authorized worker node access to volumes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 BOUNDARY PROTECTION, SA-8 SECURITY AND PRIVACY ENGINEERING PRINCIPLES, CM-6 CONFIGURATION SETTINGS
  - id: control-137
    class_: CNSWP-v1.0
    title: Volume UID and GID are inaccessible to containers
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-4 INFORMATION FLOW ENFORCEMENT, AC-16 SECURITY AND PRIVACY ATTRIBUTES, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-138
    class_: CNSWP-v1.0
    title: Artifact registry supports OCI artifacts
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-139
    class_: CNSWP-v1.0
    title: Artifact registry supports signed artifacts
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-14 SIGNED COMPONENTS
  - id: control-140
    class_: CNSWP-v1.0
    title: Artifact registry verifies artifacts against organizational policies
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AU-10 NON-REPUDIATION, CM-6 CONFIGURATION SETTINGS
  - id: control-141
    class_: SSCP-v1.0
    title: Every step in the build process should be signed/attested for process integrity
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The signing of artefacts should be performed at each stage of its life cycle. The final artefact bundle should include these collective signatures and itself be signed to give integrity to the completed artefact and all its associated metadata.
      - name: refs
        value: SI-1 POLICY AND PROCEDURES, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-142
    class_: SSCP-v1.0
    title: Every step in the build process should verify the previously generated signatures
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The integrity and provenance of images, deployment configuration, and application packages included in artefacts should all be validated using the signatures generated by each step in its build process to ensure compliance
      - name: refs
        value: SI-1 POLICY AND PROCEDURES, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-143
    class_: SSCP-v1.0
    title: Use a framework to manage signing of artefacts.
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Consider TUF/notary to sign OCI images. Notary makes use of a “root-of-trust” model to delegate trust from a single root to the individual teams or developers who sign artefacts. It uses additional metadata to allow clients to verify the freshness of content in a repository and protect against common attacks on update systems48. Clients can make use of public keys to verify the contents of the repository.
      - name: refs
        value: IA-5 AUTHENTICATOR MANAGEMENT
  - id: control-144
    class_: SSCP-v1.0
    title: Use a store to manage attestations
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Consider storing in-toto attestations in OCI registries alongside the image. Generated in-toto metadata needs to be stored and tracked for which a database or a dedicated store such as Grafeas can be used.
      - name: refs
        value: "AC-4(6)\tINFORMATION FLOW ENFORCEMENT | METADATA"
  - id: control-145
    class_: SSCP-v1.0
    title: Limit which artefacts any given party is authorized to certify
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Trust should not be granted universally or indefinitely. Artefacts or metadata that a given party is trusted to certify should be restricted using selective trust delegations. Trust must expire at predefined intervals, unless renewed as weel as a party must only be trusted to perform the tasks assigned to it to ensure compartmentatlization
      - name: refs
        value: AC-6 LEAST PRIVILEGE
  - id: control-146
    class_: SSCP-v1.0
    title: Rotation and revokation of private keys should be supported
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: The system must be prepared for when, not if, its private keys are compromised. The ability to rotate and revoke private keys must be built into the distribution mechanism. Additionally, multiple keys must be used for different tasks or roles, and a threshold of keys must be required for important roles. Finally, minimal trust must be placed in high-risk keys like those that are stored online or used in automated roles.
      - name: refs
        value: SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT
  - id: control-147
    class_: SSCP-v1.0
    title: Use a container registry that supports OCI image-spec images
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: An internal image registry should be deployed and configured to support internal artefact distribution with the security properties described in this section.
  - id: control-148
    class_: SSCP-v1.0
    title: Encrypt artefacts before distribution & ensure only authorized platforms have decryption capabilities
    props:
      - name: section
        value: Securing Artefacts
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Ensure contents of the artefact remain confidential in transit and at rest, until it is consumed. These artefacts can be encrypted so that they are accessible by authorized parties, such as the clusters, vulnerability scanners, etc. t is recommended organizations use key management and distribution systems with identity and attestation mechanisms (e.g. SPIFFE/SPIRE)
      - name: refs
        value: "SC-28(1)\tPROTECTION OF INFORMATION AT REST | CRYPTOGRAPHIC PROTECTION, SC-13 CRYPTOGRAPHIC PROTECTION, SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY, IA-5 AUTHENTICATOR MANAGEMENT, SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT"
  - id: control-149
    class_: SSCP-v1.0
    title: Cryptographically guarantee policy adherence
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: The presence and output of each build step should be attested during the build. The CNCF maintains the in-toto project that can be used to secure a chain of pipeline stages end-to-end with cryptographic guarantees. Build metadata should be evaluated against the policy template by using tools such as Open Policy Agent.
      - name: refs
        value: "CM-3(6)\tCONFIGURATION CHANGE CONTROL | CRYPTOGRAPHY MANAGEMENT"
  - id: control-150
    class_: SSCP-v1.0
    title: Validate environments and dependencies before usage
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The build environment’s sources and dependencies must come from a secure, trusted source of truth. Checksums and any signatures should be validated both in the downloading or ingestion process, and again by the build worker. This should include validating package manager signatures, checking out specific Git commit hashes, and verifying SHA sums of input sources and binaries. After completing this validation, the downloading process should sign all binaries or libraries it is adding to the secure source
      - name: refs
        value: "CM-3(2)\tCONFIGURATION CHANGE CONTROL | TESTING, VALIDATION, AND DOCUMENTATION OF CHANGES"
  - id: control-151
    class_: SSCP-v1.0
    title: Validate runtime security of build workers
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Out-of-band verification of runtime environment security, as defined by execution of policies using tools such as seccomp, AppArmor, and SELinux, provides defense in depth against attacks on build infrastructure. High privilege kernel capabilities such as debugger, device, and network attachments should be restricted and monitored.
      - name: refs
        value: "CM-3(4)\tCONFIGURATION CHANGE CONTROL | SECURITY AND PRIVACY REPRESENTATIVES"
  - id: control-152
    class_: SSCP-v1.0
    title: Validate build artefacts through verifiably reproducible builds
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: A verifiably reproducible build is a build process where, given a source code commit hash and a set of build instructions, an end user should be able to reproduce the built artefact bit for bit.
      - name: refs
        value: "CM-3(4)\tCONFIGURATION CHANGE CONTROL | SECURITY AND PRIVACY REPRESENTATIVES, CM-3(5)\tCONFIGURATION CHANGE CONTROL | AUTOMATED SECURITY RESPONSE"
  - id: control-153
    class_: SSCP-v1.0
    title: Lock and Verify External Requirements from the build process
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: "CM-3(2)\tCONFIGURATION CHANGE CONTROL | TESTING, VALIDATION, AND DOCUMENTATION OF CHANGES"
  - id: control-154
    class_: SSCP-v1.0
    title: Find and Eliminate Sources of Non-Determinism
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Reproducible-builds.org documents and offers solutions for many of these things. Diffoscope41 can be used to dig in and find the cause of differences when tracking down sources of non-determinism.
  - id: control-155
    class_: SSCP-v1.0
    title: Record the Build Environment
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Ensure best practices outlined in cloud native security paper are followed to deploy a secure orchestration layer
      - name: refs
        value: "CM-3(1)\tCONFIGURATION CHANGE CONTROL | AUTOMATED DOCUMENTATION, NOTIFICATION, AND PROHIBITION OF CHANGES"
  - id: control-156
    class_: SSCP-v1.0
    title: Automate Creation of the Build Environment
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: refs
        value: "CM-3(3)\tCONFIGURATION CHANGE CONTROL | AUTOMATED CHANGE IMPLEMENTATION"
  - id: control-157
    class_: SSCP-v1.0
    title: Distribute Builds across different infrastructure
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: refs
        value: "CM-3(3)\tCONFIGURATION CHANGE CONTROL | AUTOMATED CHANGE IMPLEMENTATION"
  - id: control-158
    class_: SSCP-v1.0
    title: Build and related CI/CD steps should be automated through a pipeline delivered as code
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: SA-3 SYSTEM DEVELOPMENT LIFE CYCLE, SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-159
    class_: SSCP-v1.0
    title: Standardize pipelines across projects
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
  - id: control-160
    class_: SSCP-v1.0
    title: Provision a secured orchestration platform to host software factory
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
  - id: control-161
    class_: SSCP-v1.0
    title: Build workers should be single use
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: Moderate
      - name: refs
        value: AC-2 ACCOUNT MANAGEMENT
  - id: control-162
    class_: SSCP-v1.0
    title: Ensure software factory has minimal network connectivity
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: The software factory should have no network connectivity other than to connect to the trusted sources of hardened source code, the dependency repository and code signing infrastructure.
      - name: refs
        value: "SC-7(3)\tBOUNDARY PROTECTION | ACCESS POINTS"
  - id: control-163
    class_: SSCP-v1.0
    title: Segregate the duties of each build worker
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: refs
        value: AC-5 SEPARATION OF DUTIES
  - id: control-164
    class_: SSCP-v1.0
    title: Pass in build worker environment and commands
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Inorder to limit hostile tooling and persistent impants from attackers, a Build Worker should start with a clean and isolated environmment. It should not be able to pull its own environment. Ensure environment variables and commands are explicitly passed to avoid any complicated and opaque build process
      - name: refs
        value: CM-2(2) BASELINE CONFIGURATION | AUTOMATION SUPPORT FOR ACCURACY / CURRENC
  - id: control-165
    class_: SSCP-v1.0
    title: Write output to separate secured storage repo
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: The output artefact should be written to a separate shared storage from the inputs. A process separate from the Build Worker should then upload that artefact to an appropriate repository.
      - name: refs
        value: AU-9(2) PROTECTION OF AUDIT INFORMATION | STORE ON SEPARATE PHYSICAL SYSTEMS OR COMPONENTS
  - id: control-166
    class_: SSCP-v1.0
    title: Only allow pipeline modification through “pipeline as code”
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The pipeline configuration (pipeline as code) should be immutable and any modification shouldn't be possible. This prevents attackers from interacting and modifying the configuration. This model then requires appropriate authentication and authorization to be in place for the software and configuration of the pipeline
  - id: control-167
    class_: SSCP-v1.0
    title: Define user roles
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: AC-2 ACCOUNT MANAGEMENT
  - id: control-168
    class_: SSCP-v1.0
    title: Follow established practices for establishing a root of trust from an offline source
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: refs
        value: SC-17 PUBLIC KEY INFRASTRUCTURE CERTIFICATES, IA-5(2) AUTHENTICATOR MANAGEMENT | PUBLIC KEY-BASED AUTHENTICATION, SA-8(10) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | HIERARCHICAL TRUST, SR-4(4)        PROVENANCE | SUPPLY CHAIN INTEGRITY — PEDIGREE
  - id: control-169
    class_: SSCP-v1.0
    title: Use short-lived workload certificates
    props:
      - name: section
        value: Securing Build Pipelines
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: refs
        value: SC-23(5) SESSION AUTHENTICITY | ALLOWED CERTIFICATE AUTHORITIES, SC-17 PUBLIC KEY INFRASTRUCTURE CERTIFICATES
  - id: control-170
    class_: SSCP-v1.0
    title: Ensure clients can perform verification of artefacts and associated metadata
    props:
      - name: section
        value: Securing Deployments
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-171
    class_: SSCP-v1.0
    title: Ensure clients can verify the “freshness” of files
    props:
      - name: section
        value: Securing Deployments
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Ensure clients can access latest versions and can veriify if the provided files are out of date
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-172
    class_: SSCP-v1.0
    title: Use an automated approach for managing software updates
    props:
      - name: section
        value: Securing Deployments
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Consider using The Update Framework (TUF) to enforce the updating of software. TUF is a specification for delivering software updates in a secure, reliable and trusted way
  - id: control-173
    class_: SSCP-v1.0
    title: Verify third party artefacts and open source libraries
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: All third party artefacts, open source libraries and any other dependencies should be verified as part of the continuous integration pipeline by validating their checksums against a known good source and validating any cryptographic signatures. Any software ingested must be scanned using Software Composition Analysis (SCA) and pentesting tools to detect whether any vulnerable open-source software is used in the final product.
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-174
    class_: SSCP-v1.0
    title: Require SBOM from third party suppliers
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Where possible, vendors should be required to provide Software Bills of Materials (SBOMs) containing the explicit details of the software and versions used within the supplied product as it provides a clear and direct link to the dependencies.
      - name: refs
        value: CM-8 INFORMATION SYSTEM COMPONENT INVENTORY
  - id: control-175
    class_: SSCP-v1.0
    title: Track dependencies between open source components
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: A register should be maintained of a project’s open source components, dependencies and vulnerabilities to help trace any deployed artefacts with new vulnerabilities. One of the most popular open source inventory implementations is OWASP Dependency-Track.
      - name: refs
        value: CM-10 SOFTWARE USAGE RESTRICTIONS
  - id: control-176
    class_: SSCP-v1.0
    title: Build libraries based upon source code
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
  - id: control-177
    class_: SSCP-v1.0
    title: Define and prioritize trusted package managers and repositories
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Organizations should host their own package managers and artefact repositories, and restrict build machines to pull from only those sources.
  - id: control-178
    class_: SSCP-v1.0
    title: Generate an immutable SBOM of the code
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: 'There are currently two well known SBOM specifications: SPDX34 and CycloneDX'
  - id: control-179
    class_: SSCP-v1.0
    title: Scan software for vulnerabilities
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-180
    class_: SSCP-v1.0
    title: Scan software for license implications
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Licensing obligations must also be factored into the ingestion process. The Linux Foundation maintains the Open Compliance Program36 which hosts several tools to ensure released software meets legal and regulatory compliance requirements.
      - name: refs
        value: CM-10 SOFTWARE USAGE RESTRICTIONS
  - id: control-181
    class_: SSCP-v1.0
    title: Run software composition analysis on ingested software
    props:
      - name: section
        value: Securing Materials
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The SCA tool will attempt to use heuristics to identify the direct and transitive dependencies, and can also serve as verification of SBOM content. This data will then be matched against data from a number of data feeds containing vulnerability data to highlight any vulnerabilities in the dependent packages.
      - name: refs
        value: SA-11 (1) (8) & (9) DEVELOPER TESTING AND EVALUATION
  - id: control-182
    class_: SSCP-v1.0
    title: Commits and tags are signed
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: GPG keys or S/MIME certificates are used to sign the source code
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-183
    class_: SSCP-v1.0
    title: Enforce full attestation and verification for protected branches
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Branch protection is enabled on the mainline and release branches with force push disabled
      - name: refs
        value: AC-6(3) LEAST PRIVILEGE | NETWORK ACCESS TO PRIVILEGED COMMANDS
  - id: control-184
    class_: SSCP-v1.0
    title: Secrets are not committed to the source code repository unless encrypted
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Implement tooling to detect secrets or to prevent certain files from being pushed which may contain plaintext sensitive materials, such as via a .gitignore and/or .gitattributes file, client-side hook (pre-commit), server-side hook (pre-receive or update), and/or as a step in the CI process
      - name: refs
        value: SC-12(3) SYSTEMS & COMMUNICATION PROTECTION, SC-12(2) CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT | SYMMETRIC & ASYMMETRIC KEYS
  - id: control-185
    class_: SSCP-v1.0
    title: The individuals or teams with write access to a repository are defined
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: High
      - name: risk-categories
        value: High
      - name: description
        value: Implement codeowners (or equivalent)
      - name: refs
        value: PL-1 POLICY AND PROCEDURES, AC-3 ACCESS ENFORCEMENT
  - id: control-186
    class_: SSCP-v1.0
    title: Automate software security scanning and testing
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Security specific scans should be performed, including Static Application Security Tests (SAST) and Dynamic Application Security Tests (DAST). Both the coverage and results of these tests should be published as part of the repository information to help downstream consumers of software better assess the stability, reliability, and/or suitability of a product or library.
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-187
    class_: SSCP-v1.0
    title: Establish and adhere to contribution policies
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Define configuration options or configuration rules witthin SCM platforms allow repository administrators to enforce security, hygiene and operational policies.
      - name: refs
        value: PL-1 POLICY AND PROCEDURES
  - id: control-188
    class_: SSCP-v1.0
    title: Define roles aligned to functional responsibilities
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Define roles by using principle of least privileges to provide access based on function such as Developer, Maintainer, Owner, Reviewer, Approver, and Guest
      - name: refs
        value: PL-1 POLICY AND PROCEDURES
  - id: control-189
    class_: SSCP-v1.0
    title: Enforce an independent four-eyes principle
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: The author(s) of a request may not also be the approver of the request. At least two reviewers with equal or greater expertise should review & approve the request.
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-190
    class_: SSCP-v1.0
    title: Use branch protection rules
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: SCM platforms allow the configuration and restriction of source code operations on individual branches. Protection rules can be used to enforce the usage of pull requests with specified precondition and approval rules, ensuring that a human code review process is followed or an automated status checking of a branch occurs. Additionally, protected branches can be used to disallow dangerous use of force pushes26, preventing the overwrite of commit histories and potential obfuscation of code changes.
      - name: refs
        value: SA-8 SECURITY ENGINEERING PRINCIPLES
  - id: control-191
    class_: SSCP-v1.0
    title: Enforce MFA for accessing source code repositories
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: IA-2(1) Identification and Authentication (organizational Users) | Multi-Factor Authenticaiton to Priviledged Accounts
  - id: control-192
    class_: SSCP-v1.0
    title: Use SSH keys to provide developers access to source code repositories
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: refs
        value: AC-1 REMOTE ACCESS
  - id: control-193
    class_: SSCP-v1.0
    title: Have a key rotation policy
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: It is recommended to implement a key rotation policy to ensure that compromised keys will cease to be usable after a certain period of time. When a private key is known to have been compromised, it should be revoked and replaced immediately to shut off access for any unauthorized user. Organizations may also consider using short lived certificates or keys, which reduces the reliance on certificate revocation systems.
      - name: refs
        value: AC-2(1) ACCOUNT MANAGEMENT | AUTOMATED SYSTEM ACCOUNT MANAGEMENT
  - id: control-194
    class_: SSCP-v1.0
    title: Use short-lived/ephemeral credentials for machine/service access
    props:
      - name: section
        value: Securing the Source Code
      - name: assurance-level
        value: Moderate to High
      - name: risk-categories
        value: Moderate to High
      - name: description
        value: Short-life credential issuance encourages the use of fine grained permissions and automation in provisioning access tokens. For CI/CD pipeline agents, short-lived access tokens should be considered instead of password-based credentials. The use of very short-lived tokens like OAuth 2.0, OpenID Connect, etc., will help to implement more secure access and increase the security assurance.
      - name: refs
        value: AC-2(1) ACCOUNT MANAGEMENT | AUTOMATED SYSTEM ACCOUNT MANAGEMENT
  - id: control-195
    class_: CNSWP-v2.0
    title: Secrets are injected at runtime, such as environment variables or as a file
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-5(7) Authenticator Management | No Embedded Unencrypted Static Authenticators
  - id: control-196
    class_: CNSWP-v2.0
    title: Applications and workloads are explicitly authorized to communicate with each other using mutual authentication
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-9 Service Identification and Authentication
  - id: control-197
    class_: CNSWP-v2.0
    title: Keys are rotated frequently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12 Cryptographic Key Establishment and Management
  - id: control-198
    class_: CNSWP-v2.0
    title: Key lifespan is short
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) Cryptographic Key Establishment and Management | Asymetric Key
  - id: control-199
    class_: CNSWP-v2.0
    title: Credentials and keys protecting sensitive workloads (health/finance/etc) are customer managed (e.g. generated and managed independent of a cloud service provider)
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: KMS and HMS are common technologies to achieve this. FIPS 140-2 compliance is strongly suggested. Cloud KMS tends to be FIPS 140-2 Level 2 or greater.
      - name: refs
        value: IA-2(12) Identification and Authentication (Organizational Users) | Acceptance of PIV Credentials
  - id: control-200
    class_: CNSWP-v2.0
    title: Authentication and authorization are determined independently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(6) Identification and Authentication (Organizational Users) | Access to Accounts - Separate Devices
  - id: control-201
    class_: CNSWP-v2.0
    title: Authentication and authorization are enforced independently
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(6) Identification and Authentication (Organizational Users) | Access to Accounts - Separate Devices
  - id: control-202
    class_: CNSWP-v2.0
    title: Access control and file permissions are updated in real-time
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: where possible as caching may permit unauthorized access
      - name: refs
        value: SI-4(2) System Monitoring | Automated Tools and Mechanisms for Real-Time Analysis
  - id: control-203
    class_: CNSWP-v2.0
    title: Authorization for workloads is granted based on attributs and roles/permissions previously assigned
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-3(13) Access Enforcement | Attribute-Based Access Control
  - id: control-204
    class_: CNSWP-v2.0
    title: ABAC and RBAC are used
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-3(13) Access Enforcement | Attribute-Based Access Control, AC-3(7) Access Enforcement | Role-Based Access Control
  - id: control-205
    class_: CNSWP-v2.0
    title: End user identity is capable of being accepted, consumed, and forwarded on for contextual or dynamic authorization
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This can be achieved through the use of identity documents and tokens.
      - name: refs
        value: SC-7(19) Boundary Protection | Block Communication from Non-Organizationally Configured Hosts
  - id: control-206
    class_: CNSWP-v2.0
    title: All cluster and workloads operators are authenticated
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-7 Cryptographic Module Authentication
  - id: control-207
    class_: CNSWP-v2.0
    title: cluster and worklods operate actions are evaluated against access control policies governing context, purpose, and output
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-7 Cryptographic Module Authentication
  - id: control-208
    class_: CNSWP-v2.0
    title: Identity federation uses multi-factor authentication for human users
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-2(1)(2) Identification and Authentication (organizational Users) | Multi-Factor Authenticaiton to Priviledged & Non Priveledged Accounts
  - id: control-209
    class_: CNSWP-v2.0
    title: HSMs are used to physically protect cryptographic secrets with an encryption key residing in the HSM
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: If this is not possible, software-based credential managers should be used.
      - name: refs
        value: AC-4(4) Information Flow Enforcement | Flow Control of Encrypted Information, SC-3(1) Security Function Isolation | Hardware Separation
  - id: control-210
    class_: CNSWP-v2.0
    title: Secrets should have a short expiration period or time to live
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Leverage tool-specific capabilities of secret manager
      - name: refs
        value: SI-12 Information Management and Retention
  - id: control-211
    class_: CNSWP-v2.0
    title: Time to live and expiration period on secrets is verfied to prevent reuse
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Leverage tool-specific capabilities of secret manager
      - name: refs
        value: AC-16(3) Security and Privacy Attributes | Maintenance of Attribute Associations by System
  - id: control-212
    class_: CNSWP-v2.0
    title: Secrets management systems are highly available
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(1) Cryptographic Key Establishment and Management | Availability
  - id: control-213
    class_: CNSWP-v2.0
    title: Long-lived secrets adhere to periodic rotation and revocation
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Long-lived secrets are not recommended, but some capabilities require them
      - name: refs
        value: SI-12 Information Management and Retention
  - id: control-214
    class_: CNSWP-v2.0
    title: Secrets are distributed through secured communication channels protected commensurate with the level of access or data they are protecting
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-16 Security and Privacy Atributes
  - id: control-215
    class_: CNSWP-v2.0
    title: Secrets injected are runtime are masqued or dropped from logs, audit, or system dumps
    props:
      - name: section
        value: Access
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Even short lived secrets may be resused if caught in time by an interested attacker. Logs, audit, and systems dumps (i.e. in-memory shared volumes instead of environment variables) are all areas where runtime injected secrets show up
      - name: refs
        value: AU-9(3) Protection of Audit Information | Cryptographic Protection
  - id: control-216
    class_: CNSWP-v2.0
    title: Bootstrapping is employed to verify correct physical and logical location of compute
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Secure Boot with TPM 2.0 or similar control
      - name: refs
        value: SI-7(9) Software, Firmware, and Information Integrity | Verify Boot Process
  - id: control-217
    class_: CNSWP-v2.0
    title: Disparate data sensitive workloads are not run on the same host OS kernel
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: 'There are at least three implementing controls possible: workloads may be separated by running in a separate cluster, on a separate node, or by implementing pods in independent VMs. It is also possible to emulate the kernel via an application kernel (e.g. gvisor)'
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-218
    class_: CNSWP-v2.0
    title: Monitor and detect any changes to the initial configurations made in runtime
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Preventative controls should be the primary control. Detective controls monitoring filesystem changes should be used to verify primary controls are operating properly.
      - name: refs
        value: CM-2(2) Baseline Configuration | Automation Support for Accuracy and Currency CM-3(7) Configuration Change Control | Review System Changes
  - id: control-219
    class_: CNSWP-v2.0
    title: API auditing is enabled with a filter for a specific set of API Groups or verbs
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: API audits of the application, kubernetes API server, and kernel should be implemented.
      - name: refs
        value: AU-2 Event Logging
  - id: control-220
    class_: CNSWP-v2.0
    title: Container specific operating systems are in use
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: a read-only OS with other services disabled. This provides isolation and resource confinement that enables developers to run isolated applications on a shared host kernel
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-221
    class_: CNSWP-v2.0
    title: The hardware root of trust is based in a Trusted Platform Module (TPM) or virtual TPM (vTPM)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Ensure HW root of trust extends to the host OS kernel, modules, system images, container runtimes, and all software on the system.
      - name: refs
        value: SI-7 Software, Firmware, and Information Integrity
  - id: control-222
    class_: CNSWP-v2.0
    title: Minimize administrative access to the control plane
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Enure both users and pods have the minimum necessary access
      - name: refs
        value: AC-6 Least Privilege
  - id: control-223
    class_: CNSWP-v2.0
    title: Object level and resource requests and limits are controlled through cgroups
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: helps prevent exhaustion of node and cluster level resources by one misbehaving workload due to an intentional (e.g., fork bomb attack or cryptocurrency mining) or unintentional (e.g., reading a large file in memory without input validation, horizontal autoscaling to exhaust compute resources) issue
      - name: refs
        value: SI-7(16) Software, Firmware, and Information Integrity | Time Limit on Process Execution Without Supervision, SI-7(17) Software, Firmware, and Information Integrity | Runtime Application Self-protection
  - id: control-224
    class_: CNSWP-v2.0
    title: Systems processing alerts are periodically tuned for false positives
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: to avoid alert flooding, fatigue, and false negatives after security incidents that were not detected by the system
      - name: refs
        value: SI-4(13) System Monitoring | Analyze Traffic and Event Patterns
  - id: control-225
    class_: CNSWP-v2.0
    title: All orchestrator control plane components are configured to communicate via mutual authentication and certificate validation with a periodically rotated certificate
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: In unfederated clusters, the CA should be used exclusively for the current cluster.
      - name: refs
        value: AC-3 Access Enforcement
  - id: control-226
    class_: CNSWP-v2.0
    title: Only sanctioned capabilities and system calls (e.g. seccomp filters), are allowed to execute or be invoked in a container by the host operating system
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Additional tooling should be installed that go beyond k8s capabilities to limit system calls. E.g. Falco.
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-227
    class_: CNSWP-v2.0
    title: Changes to critical mount points and files are prevented, monitored, and alerted
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-228
    class_: CNSWP-v2.0
    title: Runtime configuration control prevents changes to binaries, certificates, and remote access configurations
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-229
    class_: CNSWP-v2.0
    title: Runtime configuration prevents ingress and egress network access for containers to only what is required to operate
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-230
    class_: CNSWP-v2.0
    title: Policies are defined that restrict communications to only occur between sanctioned microservice pairs
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-231
    class_: CNSWP-v2.0
    title: Use a policy agent to control and enforce authorized, signed container images
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-232
    class_: CNSWP-v2.0
    title: Use a policy agent to control provenance assurance for operational workloads
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-233
    class_: CNSWP-v2.0
    title: Use a service mesh that eliminates implicit trust through data-in-motion protection (i.e. confidentiality, integrity, authentication, authorization)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 Boundary Protection
  - id: control-234
    class_: CNSWP-v2.0
    title: Use components that detect, track, aggregate and report system calls and network traffic from a container
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: should be leveraged to look for unexpected or malicious behavior
      - name: refs
        value: SI-4 System Monitoring
  - id: control-235
    class_: CNSWP-v2.0
    title: Workloads should be dynamically scanned to detect malicious or insidious behavior for which no known occurrence yet exists
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Events such as an extended sleep command that executes data exfiltration from etcd after the workload has been running for X amount of days are not expected in the majority of environments and therefore are not included in security tests. The aspect that workloads can have time or event delayed trojan horses is only detectable by comparing to baseline expected behavior, often discovered during thorough activity and scan monitoring
      - name: refs
        value: SI-3 Malicious Code Protection
  - id: control-236
    class_: CNSWP-v2.0
    title: Environments are continuously scanned to detect new vulnerabilities in workloads
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Vulnerabilities are constantly being discovered, just because it wasnt vulnerable at deploy, doesn't mean it won't be vulnerable in two weeks
      - name: refs
        value: RA-5 Vulnerability Monitoring and Scanning
  - id: control-237
    class_: CNSWP-v2.0
    title: Actionable audit events are generated that correlate/contextualize data from logs into "information" that can drive decision trees/incident response
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AU-3 Content of Audit Records
  - id: control-238
    class_: CNSWP-v2.0
    title: Segregation of duties and the principle of least privilege is enforced
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6 Least Privilege
  - id: control-239
    class_: CNSWP-v2.0
    title: Non-compliant violations are detected based on a pre-configured set of rules defined by the organization's policies
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 Software, Firmware, and Information Integrity
  - id: control-240
    class_: CNSWP-v2.0
    title: Native secret stores encrypt with keys from an external Key Management Store (KMS)
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) Systems & Communication Protection
  - id: control-241
    class_: CNSWP-v2.0
    title: Native secret stores are not configured for base64 encoding or stored in clear-text in the key-value store by default
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Encoding is not encryption
      - name: refs
        value: SC-12(3) Systems & Communication Protection
  - id: control-242
    class_: CNSWP-v2.0
    title: Network traffic to malicious domains is detected and denied
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 System Monitoring
  - id: control-243
    class_: CNSWP-v2.0
    title: Use encrypted containers for sensitive sources, methods, and data
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-28 Protection of Information at Rest
  - id: control-244
    class_: CNSWP-v2.0
    title: Use SBOMs to identify current deployments of vulnerable libraries, dependencies, and packages
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-8 System Component Inventory
  - id: control-245
    class_: CNSWP-v2.0
    title: Processes must execute only functions explicitly defined in an allow list
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-246
    class_: CNSWP-v2.0
    title: Functions are not be allowed to make changes to critical file system mount points
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-5 Access Restrictions for Change
  - id: control-247
    class_: CNSWP-v2.0
    title: Function access is only permitted to sanctioned services
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Either through networking restrictions or least privilege in permission models
      - name: refs
        value: CM-2 Baseline Configuration CM-7 Least Functionality
  - id: control-248
    class_: CNSWP-v2.0
    title: Egress network connection is monitored to detect and prevent access to C&C (command and control) and other malicious network domains
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 System Monitoring
  - id: control-249
    class_: CNSWP-v2.0
    title: Ingress network inspection is employed detect and remove malicious payloads and commands
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: For instance, SQL injection attacks can be detected using inspection.
      - name: refs
        value: SI-4 System Monitoring
  - id: control-250
    class_: CNSWP-v2.0
    title: Serverless functions are run in tenant-based resource or performance isolation for similar data classifications
    props:
      - name: section
        value: Compute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This may impact the performance due to limitations in the address space available to the isolation environment and should be considered for only the most sensitive workloads.
      - name: refs
        value: SC-7(21) Boundary Protection | Isolation of System Components
  - id: control-251
    class_: CNSWP-v2.0
    title: Trust confirmation verifies the image has a valid signature from an authorized source
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SR-4 (3) PROVENANCE | VALIDATE AS GENUINE AND NOT ALTERED, SR-4 (4)  PROVENANCE | SUPPLY CHAIN INTEGRITY — PEDIGREE
  - id: control-252
    class_: CNSWP-v2.0
    title: Image runtime policies are enforced prior to deployment
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 (17) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | RUNTIME APPLICATION SELF-PROTECTION
  - id: control-253
    class_: CNSWP-v2.0
    title: Image integrity and signature are verified prior to deployment
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SR-4 (3) PROVENANCE | VALIDATE AS GENUINE AND NOT ALTERED, SR-4 (4)  PROVENANCE | SUPPLY CHAIN INTEGRITY — PEDIGREE
  - id: control-254
    class_: CNSWP-v2.0
    title: Applications provide logs regarding authentication, authorization, actions, and failures
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-3 CONFIGURATION CHANGE CONTROL
  - id: control-255
    class_: CNSWP-v2.0
    title: Forensics capabilities are integrated into an incident response plan and procedures
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: INCIDENT HANDLING | MALICIOUS CODE AND FORENSIC ANALYSIS
  - id: control-256
    class_: CNSWP-v2.0
    title: AI, ML, or statistical modeling are used for behavioural and heuristic environment analysis to detect unwanted activities
    props:
      - name: section
        value: Deploy
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-3 SYSTEM AND INFORMATION INTEGRITY
  - id: control-257
    class_: CNSWP-v2.0
    title: Establish a dedicated Production environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Ensure that production workloads are in a separate, dedicated environment from non-production workloads. In the context of containers, this can mean separate clusters. In the case of VMs, separate networks.
      - name: refs
        value: SA-3(1) SYSTEM DEVELOPMENT LIFE CYCLE | MANAGE PREPRODUCTION ENVIRONMENT
  - id: control-258
    class_: CNSWP-v2.0
    title: Leverage Dynamic deployments
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Blue/Green, Alpha/Beta, Canary, red-black deployments
      - name: refs
        value: SA-8(31) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | SECURE SYSTEM MODIFICATION
  - id: control-259
    class_: CNSWP-v2.0
    title: Integrate vulnerability and configuration scanning in both the IDE and at the CI system during pull request
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(1) DEVELOPER TESTING AND EVALUATION | STATIC CODE ANALYSIS
  - id: control-260
    class_: CNSWP-v2.0
    title: Establish dedicated development, testing, and production environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-15 DEVELOPMENT PROCESS, STANDARDS, AND TOOLS
  - id: control-261
    class_: CNSWP-v2.0
    title: Build tests for business-critical code
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-262
    class_: CNSWP-v2.0
    title: Build tests for business-critical infrastructure
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-263
    class_: CNSWP-v2.0
    title: Test suite able to be ran locally
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-264
    class_: CNSWP-v2.0
    title: Test suites should be available to run in a shared environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-265
    class_: CNSWP-v2.0
    title: Implement at least one other non-author reviewer/approver prior to merging
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(4) DEVELOPER TESTING AND EVALUATION | MANUAL CODE REVIEWS
  - id: control-266
    class_: CNSWP-v2.0
    title: Code should be clean and well commented
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-267
    class_: CNSWP-v2.0
    title: Full infrastructure tests are used
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-268
    class_: CNSWP-v2.0
    title: Regression tests are used
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-269
    class_: CNSWP-v2.0
    title: Test suites are updated against new and emerging threats and developed into security regressions tests
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION
  - id: control-270
    class_: CNSWP-v2.0
    title: Establish a dedicated Testing environment
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-3(1) SYSTEM DEVELOPMENT LIFE CYCLE | MANAGE PREPRODUCTION ENVIRONMENT
  - id: control-271
    class_: CNSWP-v2.0
    title: Continuous integration server is isolated and hardened
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-272
    class_: CNSWP-v2.0
    title: Use threat model results to determine ROI for test development
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11(2) DEVELOPER TESTING AND EVALUATION | THREAT MODELING AND VULNERABILITY ANALYSES
  - id: control-273
    class_: CNSWP-v2.0
    title: Implement secure configuration as the default state of the system
    props:
      - name: section
        value: Develop
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Transitioning towards such a system involves making security a design requirement, inheriting default security configuration and supporting an exception process
      - name: refs
        value: SA-8(23) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | SECURE DEFAULTS
  - id: control-274
    class_: CNSWP-v2.0
    title: Should software artifacts become untrusted due to compromise or other incident, teams should revoke signing keys to ensure repudiation
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-275
    class_: CNSWP-v2.0
    title: Artifacts ready for deployment are managed in a staging or pre-prod registry
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-276
    class_: CNSWP-v2.0
    title: container images are hardened following best practices
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Images contain least permissions to remain functional, do not allow for shell, do not include unnecessary libraries and dependencies, do not bind mount files in from the host, etc.
  - id: control-277
    class_: CNSWP-v2.0
    title: Static application security testing (SAST) is performed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Static analysis is performed by dedicated SAST tools as well as linters
  - id: control-278
    class_: CNSWP-v2.0
    title: Test suites follow the test pyramid
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-279
    class_: CNSWP-v2.0
    title: Artifacts undergoing active development are held in a private registery
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-280
    class_: CNSWP-v2.0
    title: Scan application manifests in CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING
  - id: control-281
    class_: CNSWP-v2.0
    title: CI server's for sensitive workloads are isolated from other workloads
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-282
    class_: CNSWP-v2.0
    title: Builds requiring elevated privileges must run on dedicated servers
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-39 PROCESS ISOLATION
  - id: control-283
    class_: CNSWP-v2.0
    title: Build policies are enforced on the CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-1 POLICY AND PROCEDURES
  - id: control-284
    class_: CNSWP-v2.0
    title: Sign pipeline metadata
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-285
    class_: CNSWP-v2.0
    title: Build stages are verified prior to the next stage executing
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-286
    class_: CNSWP-v2.0
    title: Images are scanned within the CI pipeline
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-287
    class_: CNSWP-v2.0
    title: Vulnerability scans are coupled with pipeline compliance rules
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Prevent insecure images and artifacts from being deployed
      - name: refs
        value: SA-1 POLICY AND PROCEDURES
  - id: control-288
    class_: CNSWP-v2.0
    title: Dynamic application security testing (DAST) is performed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 (8) & (9) INTERACTIVE APPLICATION SECURITY TESTING
  - id: control-289
    class_: CNSWP-v2.0
    title: Application instrumentation is employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-4 SYSTEM MONITORING
  - id: control-290
    class_: CNSWP-v2.0
    title: Automated test results map back to requirements
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Requirements include feature, function, security, and complaince
  - id: control-291
    class_: CNSWP-v2.0
    title: Infrastructure security tests must be employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: firewall rules open to the world, overprivileged Identity & Access Management (IAM) policies, unauthenticated endpoints, etc
  - id: control-292
    class_: CNSWP-v2.0
    title: Tests to verify the security health are executed at time of build and at time of deploy
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: to evaluate any changes or regressions that may have occurred throughout the lifecycle.
      - name: refs
        value: SI-4 SYSTEM MONITORING
  - id: control-293
    class_: CNSWP-v2.0
    title: IaC is subject to the same pipeline policy controls as application code
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-294
    class_: CNSWP-v2.0
    title: Security testing is automated
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-11 DEVELOPER TESTING AND EVALUATION, CA-8 PENETRATION TESTING
  - id: control-295
    class_: CNSWP-v2.0
    title: Registries require mutually authenticated TLS for all registry connections
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-3(1) CRYPTOGRAPHIC BIDIRECTIONAL AUTHENTICATION
  - id: control-296
    class_: CNSWP-v2.0
    title: Image and metadata are signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-297
    class_: CNSWP-v2.0
    title: Workload-related configuration is signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-298
    class_: CNSWP-v2.0
    title: Workload-related package is signed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-299
    class_: CNSWP-v2.0
    title: Validate integrity of images
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SYSTEM & INFORMATION INTEGRITY
  - id: control-300
    class_: CNSWP-v2.0
    title: Scan images for vulnerabilities and malware
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: RA-5 VULNERABILITY MONITORING AND SCANNING, SA-3 SYSTEM DEVELOPMENT LIFE CYCLE
  - id: control-301
    class_: CNSWP-v2.0
    title: Enable image signing key revokation in the event of compromise
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-7 SYSTEM & INFORMATION INTEGRITY
  - id: control-302
    class_: CNSWP-v2.0
    title: Security updates are prioritized
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-303
    class_: CNSWP-v2.0
    title: HSMs or credential managers should be used for protecting credentials. If this is not possible, software-based credential managers should be used.
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-12(3) SYSTEMS & COMMUNICATION PROTECTION
  - id: control-304
    class_: CNSWP-v2.0
    title: Container image scanning findings are acted upon
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-305
    class_: CNSWP-v2.0
    title: Organizational compliance rules are enforced
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: PL-1 POLICY AND PROCEDURES
  - id: control-306
    class_: CNSWP-v2.0
    title: Incremental hardening of the infrastructure is employed
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-307
    class_: CNSWP-v2.0
    title: pulls from public registries are controlled and only from authorized engineers or internal registries
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6(3) LEAST PRIVILEGE | NETWORK ACCESS TO PRIVILEGED COMMANDS
  - id: control-308
    class_: CNSWP-v2.0
    title: Image encryption is coupled with key management attestation and/or authorization and credential distribution
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: This restricts the image to only be deployed to authorized platforms. Container image authorization is useful for compliance use cases such as geo-fencing or export control and digital rights media management
      - name: refs
        value: SC-12(2) CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT | SYMMETRIC & ASYMMETRIC KEYS, SC-12(3) CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT | SYMMETRIC & ASYMMETRIC KEYS
  - id: control-309
    class_: CNSWP-v2.0
    title: At-risk applications are prioritized for remediation by the exploit maturity and vulnerable path presence in addition to the CVSS score
    props:
      - name: section
        value: Distribute
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-2(3) SYSTEM & INFORMATION INTEGRITY
  - id: control-310
    class_: CNSWP-v2.0
    title: Network policies enforce east-west network communication within the container deployment is limited to only that which is authorized for access
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-6(3) LEAST PRIVILEGE | NETWORK ACCESS TO PRIVILEGED COMMANDS
  - id: control-311
    class_: CNSWP-v2.0
    title: Incident reponse considers cloud native workloads
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: workloads which may not always conform with some underlying assumptions about node isolation (new pod instances could run on a different server), networking (e.g. IP addresses are assigned dynamically) and immutability (e.g. runtime changes to container are not persisted across restarts)
      - name: refs
        value: IR-4 INCIDENT HANDLING | AUTOMATED INCIDENT HANDLING PROCESSES, IR-4(5) INCIDENT HANDLING | AUTOMATIC DISABLING OF SYSTEM, CA-7 CONTINUOUS MONITORING
  - id: control-312
    class_: CNSWP-v2.0
    title: Incident response accounts for appropriate evidence handling and collection of coud native workloads
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IR-5(1) INCIDENT MONITORING | AUTOMATED TRACKING, DATA COLLECTION, AND ANALYSIS
  - id: control-313
    class_: CNSWP-v2.0
    title: Rootless builds are employed
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-314
    class_: CNSWP-v2.0
    title: cgroups and system groups are used to isolate workloads and deployments
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-315
    class_: CNSWP-v2.0
    title: MAC implementations are employed
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: SELinux, AppArmor
      - name: refs
        value: AC-3(3) ACCESS ENFORCEMENT | MANDATORY ACCESS CONTROL
  - id: control-316
    class_: CNSWP-v2.0
    title: Threat model code and infrastructure
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: While various strategies are available, the MITRE ATT&CK matrix is an excellent starting point
      - name: refs
        value: SA-11(2) DEVELOPER TESTING AND EVALUATION | THREAT MODELING AND VULNERABILITY ANALYSES
  - id: control-317
    class_: CNSWP-v2.0
    title: Entities are able to independently authenticate other identities
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: Public Key Infrastructure
      - name: refs
        value: IA-9 SERVICE IDENTIFICATION AND AUTHENTICATION
  - id: control-318
    class_: CNSWP-v2.0
    title: Each entity can create proof of who the identity is
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: IA-9 SERVICE IDENTIFICATION AND AUTHENTICATION
  - id: control-319
    class_: CNSWP-v2.0
    title: Orchestrator is running on an a trusted OS, BIOS, etc
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-14 SIGNED COMPONENTS
  - id: control-320
    class_: CNSWP-v2.0
    title: Orchestrator verifies the claims of a container
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-6 SECURITY AND PRIVACY FUNCTION VERIFICATION
  - id: control-321
    class_: CNSWP-v2.0
    title: Orchestrator network policies are used in conjunction with a service mesh
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-322
    class_: CNSWP-v2.0
    title: Adhere to supply chain security best practices
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The SSCP controls in this document provide the necessary controls for best practices
  - id: control-323
    class_: CNSWP-v2.0
    title: Restrict access to repository and branches
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-324
    class_: CNSWP-v2.0
    title: Never store unencrypted credentials or secrets in the Git repository and block sensitive data being pushed to Git
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-325
    class_: CNSWP-v2.0
    title: Enforce strong identity with GPG Signed Commits, to give accountability and traceability
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-326
    class_: CNSWP-v2.0
    title: Require linear history and maintain a commit history by disallowing force pushes
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-327
    class_: CNSWP-v2.0
    title: Enforce branching policy. Especially protect the main branch and require code review before merging
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-328
    class_: CNSWP-v2.0
    title: Monitor for vulnerabilities, and keep Git and GitOps tools up to date
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-329
    class_: CNSWP-v2.0
    title: Rotate SSH keys and Personal Access Tokens, block unauthorized access to Git repositories
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-330
    class_: CNSWP-v2.0
    title: Utilize a dedicated non-user technical account for access where credentials are frequently rotated and short-lived
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-331
    class_: CNSWP-v2.0
    title: Limit users who can elevate permissions to remove security features to cover their tracks via deletion of audit trails and silencing of alerts
    props:
      - name: section
        value: Security Assurance
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The 'Security the Source Code' SSCP controls provide the necessary GitOps best practices
  - id: control-332
    class_: CNSWP-v2.0
    title: Storage control plane management interface requires mutual authentication and TLS for connections
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY
  - id: control-333
    class_: CNSWP-v2.0
    title: Data availability is achieved through parity or mirroring, erasure coding or replicas
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SI-13 PREDICTABLE FAILURE PREVENTION
  - id: control-334
    class_: CNSWP-v2.0
    title: Hashing and checksums are added to blocks, objects or files
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: primarily designed to detect and recover from corrupted data, but can also add a layer of protection against the tampering of data.
      - name: refs
        value: CM-7 LEAST FUNCTIONALITY, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-335
    class_: CNSWP-v2.0
    title: Data backup storage and data source storage should have same security controls
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SA-9 EXTERNAL SYSTEM SERVICES, SC-30 CONCEALMENT AND MISDIRECTION
  - id: control-336
    class_: CNSWP-v2.0
    title: Secure erasure adhering to OPAL standards is employed for returned or non-functional devices
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CP-9 SYSTEM BACKUP, MP-6 MEDIA SANITIZATION
  - id: control-337
    class_: CNSWP-v2.0
    title: Encryption at rest considers data path, size, and frequency of access when determing additional security protections and cryptographic algorithms to employ
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: description
        value: The encryption may be implemented in the storage client or storage server and granularity of the encryption will vary by system (e.g. per volume, per group or global keys)
      - name: refs
        value: SC-28 PROTECTION OF INFORMATION AT REST
  - id: control-338
    class_: CNSWP-v2.0
    title: Caching is considered for determining encryption requirements in archictures
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-339
    class_: CNSWP-v2.0
    title: Namespaces have defined trust boundaries to cordon access to volumes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-340
    class_: CNSWP-v2.0
    title: Security policies are used to prevent containers from accessing volume mounts on worker nodes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 BOUNDARY PROTECTION, SA-8 SECURITY AND PRIVACY ENGINEERING PRINCIPLES, CM-6 CONFIGURATION SETTINGS
  - id: control-341
    class_: CNSWP-v2.0
    title: Security policies are used enforce authorized worker node access to volumes
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: SC-7 BOUNDARY PROTECTION, SA-8 SECURITY AND PRIVACY ENGINEERING PRINCIPLES, CM-6 CONFIGURATION SETTINGS
  - id: control-342
    class_: CNSWP-v2.0
    title: Volume UID and GID are inaccessible to containers
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AC-4 INFORMATION FLOW ENFORCEMENT, AC-16 SECURITY AND PRIVACY ATTRIBUTES, SI-7 SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY
  - id: control-343
    class_: CNSWP-v2.0
    title: Artifact registry supports OCI artifacts
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
  - id: control-344
    class_: CNSWP-v2.0
    title: Artifact registry supports signed artifacts
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: CM-14 SIGNED COMPONENTS
  - id: control-345
    class_: CNSWP-v2.0
    title: Artifact registry verifies artifacts against organizational policies
    props:
      - name: section
        value: Storage
      - name: assurance-level
        value: N/A
      - name: risk-categories
        value: N/A
      - name: refs
        value: AU-10 NON-REPUDIATION, CM-6 CONFIGURATION SETTINGS
